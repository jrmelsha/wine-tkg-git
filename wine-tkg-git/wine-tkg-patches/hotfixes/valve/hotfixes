#!/bin/bash

# When not building proton, get rid of steam-specific patches
if [ "$_EXTERNAL_INSTALL" != "proton" ]; then
  cp "$_where"/wine-tkg-patches/hotfixes/valve/de-steamify.mypatch "$_where"/
fi

if [ "$_use_staging" = "true" ]; then
    # nvapi-revert
    _hotfix_mainlinereverts+=(fdfb4b925f52fbec580dd30bef37fb22c219c667)

    _staging_args+=(-W winex11-_NET_ACTIVE_WINDOW \
                    -W winex11-WM_WINDOWPOSCHANGING \
                    -W winex11-MWM_Decorations \
                    -W winex11-key_translation \
                    -W ntdll-Syscall_Emulation \
                    -W ntdll-Junction_Points \
                    -W server-File_Permissions \
                    -W server-Stored_ACLs \
                    -W eventfd_synchronization \
                    -W d3dx11_43-D3DX11CreateTextureFromMemory \
                    -W dbghelp-Debug_Symbols \
                    -W dwrite-FontFallback \
                    -W ntdll-DOS_Attributes \
                    -W Pipelight \
                    -W dinput-joy-mappings \
                    -W server-Key_State \
                    -W server-PeekMessage \
                    -W server-Realtime_Priority \
                    -W server-Signal_Thread \
                    -W loader-KeyboardLayouts \
                    -W mshtml-HTMLLocation_put_hash \
                    -W msxml3-FreeThreadedXMLHTTP60 \
                    -W ntdll-ForceBottomUpAlloc \
                    -W ntdll-WRITECOPY \
                    -W ntdll-Builtin_Prot \
                    -W ntdll-CriticalSection \
                    -W ntdll-Exception \
                    -W ntdll-Hide_Wine_Exports \
                    -W ntdll-Serial_Port_Detection \
                    -W secur32-InitializeSecurityContextW \
                    -W server-default_integrity \
                    -W user32-rawinput-mouse \
                    -W user32-rawinput-mouse-experimental \
                    -W user32-recursive-activation \
                    -W windows.networking.connectivity-new-dll \
                    -W wineboot-ProxySettings \
                    -W winex11-UpdateLayeredWindow \
                    -W winex11-Vulkan_support \
                    -W wintab32-improvements \
                    -W xactengine3_7-PrepareWave \
                    -W xactengine3_7-Notification \
                    -W xactengine-initial \
                    -W kernel32-CopyFileEx \
                    -W shell32-Progress_Dialog \
                    -W shell32-ACE_Viewer \
                    -W fltmgr.sys-FltBuildDefaultSecurityDescriptor \
                    -W inseng-Implementation \
                    -W ntdll-RtlQueryPackageIdentity \
                    -W packager-DllMain \
                    -W winemenubuilder-Desktop_Icon_Path \
                    -W wscript-support-d-u-switches \
                    -W sapi-ISpObjectToken-CreateInstance \
                    -W sapi-iteration-tokens \
                    -W wininet-Cleanup)
fi

_proton_staging() {
    msg2 "Manual application of some staging patches..."
    echo -e "\nManually applying some staging patches..." >> "$_where"/prepare.log
    patch -RNp1 < "${srcdir}"/"$_stgsrcdir"/patches/Compiler_Warnings/0031-include-Check-element-type-in-CONTAINING_RECORD-and-.patch >> "$_where"/prepare.log

    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-Notification/0001-xactengine3.7-Delay-Notication-for-WAVEBANKPREPARED.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-Notification/0002-xactengine3_7-Record-context-for-each-notications.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-PrepareWave/0002-xactengine3_7-Implement-IXACT3Engine-PrepareStreamin.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/xactengine3_7-PrepareWave/0003-xactengine3_7-Implement-IXACT3Engine-PrepareInMemory.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/loader-KeyboardLayouts/0001-loader-Add-Keyboard-Layouts-registry-enteries.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/loader-KeyboardLayouts/0002-user32-Improve-GetKeyboardLayoutList.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/ntdll-Exception/0002-ntdll-OutputDebugString-should-throw-the-exception-a.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/ntdll-Hide_Wine_Exports/0001-ntdll-Add-support-for-hiding-wine-version-informatio.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/secur32-InitializeSecurityContextW/0001-secur32-Input-Parameter-should-be-NULL-on-first-call.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/wineboot-ProxySettings/0001-wineboot-Initialize-proxy-settings-registry-key.patch >> "$_where"/prepare.log
    patch -Np1 < "${srcdir}"/"$_stgsrcdir"/patches/winex11-UpdateLayeredWindow/0001-winex11-Fix-alpha-blending-in-X11DRV_UpdateLayeredWi.patch >> "$_where"/prepare.log

    # Clear non-compatible mypatches
    rm -f "$_where"/{0002-futex_waitv,Shell32-CreateDirectoryInDestinationInFileOp-Move-multiop}.mypatch
}
